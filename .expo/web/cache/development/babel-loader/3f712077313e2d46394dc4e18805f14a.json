{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\joiner\\\\Desktop\\\\suis-movil\\\\app\\\\pages\\\\LoginSceen.js\";\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport login from \"../assets/styles/loginStyles\";\nimport { database } from \"../db/database\";\nimport { GlobalContext } from \"../context/MyContext\";\nexport default function LoginSceen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setIsLogin = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passsword = _useState6[0],\n      setPassword = _useState6[1];\n\n  var gC = useContext(GlobalContext);\n  var params = JSON.stringify({\n    user: username,\n    passsword: passsword\n  });\n\n  var goToHome = function goToHome() {\n    return _regeneratorRuntime.async(function goToHome$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8080/suis/web/index.php/api/login', {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/x-www-form-urlencoded'\n              },\n              body: JSON.stringify({\n                user: 'jvargas',\n                passwword: '123456'\n              })\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: login.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: login.bgGroundDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: login.logoLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/mpps-logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: login.inputContainerDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: login.inputDark,\n    autoCompleteType: \"username\",\n    autoFocus: true,\n    placeholder: \"Usuario\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: login.inputDark,\n    autoCompleteType: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    placeholderTextColor: \"white\",\n    textContentType: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: login.contentButonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return goToHome();\n    },\n    underlayColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: login.buttLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: login.textButoon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Iniciar\")))), React.createElement(View, {\n    style: login.suisContText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: login.suisText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"SUIS\"))));\n}","map":{"version":3,"sources":["C:/Users/joiner/Desktop/suis-movil/app/pages/LoginSceen.js"],"names":["React","useContext","useState","axios","qs","login","database","GlobalContext","LoginSceen","navigation","isLogin","setIsLogin","username","setUsername","passsword","setPassword","gC","params","JSON","stringify","user","goToHome","fetch","method","headers","body","passwword","console","error","Platform","OS","container","bgGroundDark","logoLogin","require","inputContainerDark","inputDark","text","contentButonLogin","buttLogin","textButoon","suisContText","suisText"],"mappings":"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","sourcesContent":["import React, { useContext, useState   } from \"react\";\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { Image, View, TextInput, Text, TouchableHighlight, KeyboardAvoidingView } from \"react-native\";\r\nimport login from \"../assets/styles/loginStyles\";\r\nimport {database} from \"../db/database\";\r\nimport {GlobalContext} from '../context/MyContext'\r\nexport default function LoginSceen({ navigation }) {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [passsword, setPassword] = useState();\r\n  const gC = useContext(GlobalContext);\r\n  const params = JSON.stringify({\r\n    user: username,\r\n    passsword: passsword\r\n    });\r\n  const  goToHome  = async () => {\r\n    \r\n    try {\r\n      await fetch('http://127.0.0.1:8080/suis/web/index.php/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: JSON.stringify({\r\n        user: 'jvargas',\r\n        passwword: '123456',\r\n      }),\r\n    });\r\n    }catch (err){\r\n      console.error(err);\r\n    }\r\n    //navigation.navigate('PrincipalPages');\r\n    //database.setupDatabaseAsync()\r\n    //database.getFicha(gC.setDataGlobal)\r\n  }\r\n  return (\r\n    <KeyboardAvoidingView\r\n    behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n            style={login.container}\r\n            >\r\n    <View style={login.bgGroundDark}>\r\n      <View style={login.logoLogin}>\r\n        <Image source={require(\"../assets/images/mpps-logo.png\")} />\r\n      </View>\r\n      <View style={login.inputContainerDark}>\r\n        <TextInput\r\n          style={login.inputDark}\r\n          autoCompleteType=\"username\"\r\n          autoFocus\r\n          placeholder=\"Usuario\"\r\n          placeholderTextColor=\"white\"\r\n          onChangeText={text => setUsername(text)}\r\n        />\r\n        <TextInput\r\n          style={login.inputDark}\r\n          autoCompleteType=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          placeholderTextColor=\"white\"\r\n          textContentType=\"password\"\r\n          secureTextEntry\r\n          onChangeText={text => setPassword(text)}\r\n        />\r\n      </View>\r\n      <View style={login.contentButonLogin}>\r\n        <TouchableHighlight onPress={() => goToHome()} underlayColor='transparent'>\r\n          <View style={login.buttLogin}>\r\n            <Text style={login.textButoon}>Iniciar</Text>\r\n          </View>\r\n        </TouchableHighlight>\r\n      </View>\r\n      {/**\r\n      <View style={login.singInFingerCont}>\r\n        <TouchableHighlight>\r\n          <View style={login.buttLoginFinger}>\r\n            <View style={login.textFingerCont}>\r\n              <Text style={login.textButoonFinger}>\r\n                Ingresar con huella dactilar\r\n              </Text>\r\n            </View>\r\n              * ?paradespues TODO <View style={{ marginLeft: 44 }}>\r\n              <Image\r\n                style={login.huellaSingin}\r\n                source={require(\"../assets/images/huella-dactilar.png\")}\r\n              />\r\n          </View>\r\n        </TouchableHighlight>\r\n      </View>\r\n            </View> */}\r\n      <View style={login.suisContText}>\r\n        <Text style={login.suisText}>SUIS</Text>\r\n      </View>\r\n    </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
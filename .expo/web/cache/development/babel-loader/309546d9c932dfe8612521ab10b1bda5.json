{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\joiner\\\\Desktop\\\\suis-movil\\\\app\\\\pages\\\\LoginSceen.js\";\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport login from \"../assets/styles/loginStyles\";\nimport { database } from \"../db/database\";\nimport { GlobalContext } from \"../context/MyContext\";\nexport default function LoginSceen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passsword = _useState4[0],\n      setPassword = _useState4[1];\n\n  var gC = useContext(GlobalContext);\n  var formData = new FormData();\n\n  var goToHome = function goToHome() {\n    return _regeneratorRuntime.async(function goToHome$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            database.getUSer(username, passsword);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: login.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: login.bgGroundDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: login.logoLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/mpps-logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: login.inputContainerDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: login.inputDark,\n    autoCompleteType: \"username\",\n    autoFocus: true,\n    placeholder: \"Usuario\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: login.inputDark,\n    autoCompleteType: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    placeholderTextColor: \"white\",\n    textContentType: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: login.contentButonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return goToHome();\n    },\n    underlayColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: login.buttLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: login.textButoon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Iniciar\")))), React.createElement(View, {\n    style: login.suisContText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: login.suisText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"SUIS\"))));\n}","map":{"version":3,"sources":["C:/Users/joiner/Desktop/suis-movil/app/pages/LoginSceen.js"],"names":["React","useContext","useState","axios","qs","login","database","GlobalContext","LoginSceen","navigation","username","setUsername","passsword","setPassword","gC","formData","FormData","goToHome","getUSer","Platform","OS","container","bgGroundDark","logoLogin","require","inputContainerDark","inputDark","text","contentButonLogin","buttLogin","textButoon","suisContText","suisText"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { Image, View, TextInput, Text, TouchableHighlight, KeyboardAvoidingView, Platform, Alert } from \"react-native\";\r\nimport login from \"../assets/styles/loginStyles\";\r\nimport { database } from \"../db/database\";\r\nimport { GlobalContext } from '../context/MyContext'\r\nexport default function LoginSceen({ navigation }) {\r\n  const [username, setUsername] = useState('');\r\n  const [passsword, setPassword] = useState();\r\n  const gC = useContext(GlobalContext);\r\n\r\n  const formData = new FormData();\r\n  // TODO AGG PANTALLA DE CARGA\r\n  const goToHome = async () => {\r\n    /**\r\n     * ? consultamos si existe la table de usuarios si es asi consultamos alli primero\r\n     */\r\n    \r\n    //database.setupDatabaseUserAsync\r\n      database.getUSer(username, passsword);\r\n\r\n    /* formData.append(\"user\", username);\r\n    formData.append(\"password\", passsword);\r\n    await axios.post(`http://sistemas.mpps.gob.ve/index.php/api/login`,\r\n      formData,\r\n      {\r\n        header: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      }).then(r => {\r\n        if (r.data !== null) {\r\n          gC.setIdUser(r.data)\r\n          database.setupDatabaseAsync()\r\n          database.getFicha(gC.setDataGlobal)\r\n          navigation.navigate('PrincipalPages');\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert('Sus datos son incorrecto');\r\n      }) */\r\n  }\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n      style={login.container}\r\n    >\r\n      <View style={login.bgGroundDark}>\r\n        <View style={login.logoLogin}>\r\n          <Image source={require(\"../assets/images/mpps-logo.png\")} />\r\n        </View>\r\n        <View style={login.inputContainerDark}>\r\n          <TextInput\r\n            style={login.inputDark}\r\n            autoCompleteType=\"username\"\r\n            autoFocus\r\n            placeholder=\"Usuario\"\r\n            placeholderTextColor=\"white\"\r\n            onChangeText={text => setUsername(text)}\r\n          />\r\n          <TextInput\r\n            style={login.inputDark}\r\n            autoCompleteType=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            placeholderTextColor=\"white\"\r\n            textContentType=\"password\"\r\n            secureTextEntry\r\n            onChangeText={text => setPassword(text)}\r\n          />\r\n        </View>\r\n        <View style={login.contentButonLogin}>\r\n          <TouchableHighlight onPress={() => goToHome()} underlayColor='transparent'>\r\n            <View style={login.buttLogin}>\r\n              <Text style={login.textButoon}>Iniciar</Text>\r\n            </View>\r\n          </TouchableHighlight>\r\n        </View>\r\n        {/**\r\n      <View style={login.singInFingerCont}>\r\n        <TouchableHighlight>\r\n          <View style={login.buttLoginFinger}>\r\n            <View style={login.textFingerCont}>\r\n              <Text style={login.textButoonFinger}>\r\n                Ingresar con huella dactilar\r\n              </Text>\r\n            </View>\r\n              * ?paradespues TODO <View style={{ marginLeft: 44 }}>\r\n              <Image\r\n                style={login.huellaSingin}\r\n                source={require(\"../assets/images/huella-dactilar.png\")}\r\n              />\r\n          </View>\r\n        </TouchableHighlight>\r\n      </View>\r\n            </View> */}\r\n        <View style={login.suisContText}>\r\n          <Text style={login.suisText}>SUIS</Text>\r\n        </View>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}